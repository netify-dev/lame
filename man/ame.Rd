% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ame.R
\name{ame}
\alias{ame}
\title{AME model fitting routine}
\usage{
ame(Y, Xdyad=NULL, Xrow=NULL, Xcol=NULL, rvar = !(family=="rrl") ,
cvar = TRUE,  dcor = !symmetric, nvar=TRUE, R = 0, R_row = NULL, R_col = NULL,
mode = c("unipartite", "bipartite"), family="normal",
intercept=!is.element(family,c("rrl","ordinal")),
symmetric=FALSE,
odmax=rep(max(apply(Y>0,1,sum,na.rm=TRUE)),nrow(Y)), 
prior=list(), g=NA,
seed = 6886, nscan = 10000, burn = 500, odens = 25, 
plot=TRUE, print = TRUE, gof=TRUE, model.name=NULL)
}
\arguments{
\item{Y}{For unipartite: an n x n square relational matrix. For bipartite: an nA x nB
rectangular relational matrix where nA is the number of row nodes and nB is the
number of column nodes. See family below for various data types.}

\item{Xdyad}{For unipartite: an n x n x pd array of covariates. For bipartite:
an nA x nB x pd array of covariates.}

\item{Xrow}{For unipartite: an n x pr matrix of nodal row covariates. For bipartite:
an nA x pr matrix of row node covariates.}

\item{Xcol}{For unipartite: an n x pc matrix of nodal column covariates. For bipartite:
an nB x pc matrix of column node covariates.}

\item{rvar}{logical: fit row random effects (asymmetric case)?}

\item{cvar}{logical: fit column random effects (asymmetric case)?}

\item{dcor}{logical: fit a dyadic correlation (asymmetric case)? Note: not used for bipartite networks.}

\item{nvar}{logical: fit nodal random effects (symmetric case)?}

\item{R}{integer: dimension of the multiplicative effects (can be zero). For bipartite networks,
this is used as the default for both R_row and R_col if they are not specified.}

\item{R_row}{integer: for bipartite networks, dimension of row node multiplicative effects (defaults to R)}

\item{R_col}{integer: for bipartite networks, dimension of column node multiplicative effects (defaults to R)}

\item{mode}{character: either "unipartite" (default) for square networks or "bipartite" for rectangular networks}

\item{family}{character: one of "normal","tobit","binary","ordinal","cbin","frn","rrl","poisson" - see
the details below}

\item{intercept}{logical: fit model with an intercept?}

\item{symmetric}{logical: Is the sociomatrix symmetric by design?}

\item{odmax}{a scalar integer or vector of length n giving the maximum
number of nominations that each node may make - used for "frn" and "cbin"
families}

\item{prior}{a list containing hyperparameters for the prior distributions.
Available options and their defaults:
\describe{
\item{Sab0}{Prior covariance matrix for additive effects (default: diag(2)).
A 2x2 matrix where Sab0\[1,1\] is the prior variance for row effects,
Sab0\[2,2\] is the prior variance for column effects, and off-diagonals
control correlation between row and column effects.}
\item{eta0}{Prior degrees of freedom for covariance of multiplicative effects
(default: 4 + 3 \\* n/100, where n is the number of actors). Higher values
impose stronger shrinkage on the latent factors. Common values: 4-10 for
weak shrinkage, 10-20 for moderate, >20 for strong shrinkage.}
\item{etaab}{Prior degrees of freedom for covariance of additive effects
(default: 4 + 3 \\* n/100). Controls shrinkage of row/column random effects.
Larger values shrink effects toward zero.}
\item{s20}{Prior variance for regression coefficients (default: 1).
Larger values allow for larger coefficient values.}
\item{s2u0}{Prior variance for multiplicative effects (default: 1).}
\item{Suv0}{Prior covariance for multiplicative effects (default: identity matrix).}
}
Common usage: prior = list(Sab0 = diag(c(2, 2)), eta0 = 10) for moderate
shrinkage, or prior = list(Sab0 = diag(c(0.5, 0.5))) for tighter control.}

\item{g}{optional scalar or vector of length dim(X)\[3\] for g-prior on
regression coefficients. If not specified, defaults are: for normal family,
g = n\emph{var(Y); for tobit, g = n}var(Y)*4; for other families, g = n, where
n is the number of non-missing dyads. The g-prior controls the variance of
regression coefficients.}

\item{seed}{random seed}

\item{nscan}{number of iterations of the Markov chain (beyond burn-in)}

\item{burn}{burn in for the Markov chain}

\item{odens}{output density for the Markov chain}

\item{plot}{logical: plot results while running?}

\item{print}{logical: print results while running?}

\item{gof}{logical: calculate goodness of fit statistics?}

\item{model.name}{optional string for model selection output}
}
\value{
\item{BETA}{posterior samples of regression coefficients}
\item{VC}{posterior samples of the variance parameters}
\item{APM}{posterior mean of additive row effects a} \item{BPM}{posterior
mean of additive column effects b} \item{U}{posterior mean of multiplicative
row effects u} \item{V}{posterior mean of multiplicative column effects v (asymmetric case)}
\item{UVPM}{posterior mean of UV (asymmetric case)}
\item{ULUPM}{posterior mean of ULU (symmetric case)}
\item{L}{posterior mean of L (symmetric case)}
\item{EZ}{estimate of expectation of Z
matrix} \item{YPM}{posterior mean of Y (for imputing missing values)}
\item{GOF}{observed (first row) and posterior predictive (remaining rows)
values of four goodness-of-fit statistics}
\item{model.name}{Name of the model (if provided)}
}
\description{
An MCMC routine providing a fit to an additive and multiplicative effects
(AME) regression model to cross-sectional relational data of various types.
This function supports both unipartite (square) and bipartite (rectangular)
networks. For longitudinal networks, use the \code{lame} function.
}
\details{
This command provides posterior inference for parameters in AME models of
cross-sectional relational data, assuming one of eight possible data types/models.
The function supports both unipartite networks (square adjacency matrices) and
bipartite networks (rectangular adjacency matrices with distinct row and column
node sets) for single time point analysis.

\strong{Theoretical Foundation:}

The AME model decomposes network structure into several components:
\deqn{y_{ij} = \beta'x_{ij} + a_i + b_j + u_i'v_j + \epsilon_{ij}}
where:
\itemize{
\item \eqn{\beta'x_{ij}}: Fixed effects of dyadic/nodal covariates
\item \eqn{a_i}: Additive sender (row) effect for node i
\item \eqn{b_j}: Additive receiver (column) effect for node j
\item \eqn{u_i'v_j}: Multiplicative interaction between latent factors
\item \eqn{\epsilon_{ij}}: Dyadic error term (may be correlated)
}

This specification generalizes the social relations model (Warner et al. 1979)
and latent space models (Hoff et al. 2002) within a unified framework.

\strong{Prior Distributions:}

The model uses conjugate and semi-conjugate priors where possible:
\itemize{
\item Regression coefficients: \eqn{\beta \sim N(0, g\sigma^2(X'X)^{-1})} (g-prior)
\item Additive effects: \eqn{(a_i, b_i)' \sim N(0, \Sigma_{ab})} jointly
\item Covariance: \eqn{\Sigma_{ab} \sim IW(\eta_0, \eta_0 S_{ab0})} (inverse-Wishart)
\item Multiplicative effects: Hierarchical shrinkage via \eqn{\eta_0}
\item Dyadic correlation: \eqn{\rho \sim Uniform(-1, 1)} with Metropolis updates
}

The inverse-Wishart prior on \eqn{\Sigma_{ab}} allows learning correlation between
sender and receiver effects, capturing reciprocity patterns.

\strong{Multiplicative Effects (Latent Factors):}

When R > 0, the model includes R-dimensional latent factors:
\itemize{
\item Asymmetric case: \eqn{u_i, v_j \in \mathbb{R}^R} with \eqn{u_i'v_j} interaction
\item Symmetric case: \eqn{u_i = v_i} with eigendecomposition \eqn{ULU'}
\item Captures homophily, transitivity, and community structure
\item R chosen via model selection or set to 2-3 for visualization
}

\strong{Estimation Algorithm:}

The model uses a Gibbs sampler with the following updates:
\enumerate{
\item Sample latent Z given parameters (data augmentation for non-normal families)
\item Update regression coefficients \eqn{\beta} via g-prior conjugate update
\item Update additive effects (a,b) jointly with \eqn{\beta}
\item Update covariance \eqn{\Sigma_{ab}} from inverse-Wishart
\item Update multiplicative effects U,V via Gibbs or Metropolis-Hastings
\item Update dyadic correlation \eqn{\rho} via Metropolis-Hastings
\item Update variance \eqn{\sigma^2} (for continuous families)
}

\strong{Standard Model Types:}

The following data types/models are available:

"normal": A normal AME model.

"tobit": A tobit AME model for censored continuous data. Values are censored
at zero, appropriate for non-negative continuous relational data.

"binary": A binary probit AME model.

"ordinal": An ordinal probit AME model. An intercept is not identifiable in this
model.

"cbin": An AME model for censored binary data.  The value of 'odmax'
specifies the maximum number of links each row may have.

"frn": An AME model for fixed rank nomination networks. A higher value of
the rank indicates a stronger relationship. The value of 'odmax' specifies
the maximum number of links each row may have.

"rrl": An AME model based on the row ranks. This is appropriate if the
relationships across rows are not directly comparable in terms of scale. An
intercept, row random effects and row regression effects are not estimable
for this model.

"poisson": An overdispersed Poisson AME model for count data. The latent
variable represents the log mean of the Poisson distribution.
}
\examples{
\dontrun{
data(YX_bin) 
fit<-ame(YX_bin$Y,YX_bin$X,burn=10,nscan=10,odens=1,family="binary")
# Note: you should run the Markov chain much longer in practice
} 
 
}
\author{
Peter Hoff
}
