% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gof_stats.R
\name{gof_stats}
\alias{gof_stats}
\title{Goodness of fit statistics}
\usage{
gof_stats(Y, mode = NULL, custom_gof = NULL)
}
\arguments{
\item{Y}{a relational data matrix. For unipartite networks, a square n x n
matrix where Y\[i,j\] represents the relationship from node i to node j.
For bipartite networks, an nA x nB matrix where Y\[i,j\]
represents the relationship from node i in set A to node j in set B.
Missing values (NA) are allowed and will be handled appropriately.}

\item{mode}{character string specifying the network type: "unipartite" or "bipartite".
If NULL (default), attempts to infer from matrix dimensions (rectangular = bipartite,
square = unipartite). Note: square bipartite networks must specify mode="bipartite".}

\item{custom_gof}{optional function or list of functions to compute custom GOF statistics.
Each function should take Y as input and return a named numeric value or vector.
Custom statistics will be added to the standard statistics.}
}
\value{
A named numeric vector containing goodness-of-fit statistics.
For unipartite networks:
\describe{
\item{sd.rowmean}{Standard deviation of row means. Measures the
heterogeneity in out-degree centrality (sender effects).}
\item{sd.colmean}{Standard deviation of column means. Measures the
heterogeneity in in-degree centrality (receiver effects).}
\item{dyad.dep}{Dyadic dependence/reciprocity correlation.}
\item{cycle.dep}{Cyclic/transitive triadic dependence.}
\item{trans.dep}{Transitive triadic dependence.}
}
For bipartite networks:
\describe{
\item{sd.rowmean}{Standard deviation of row means (sender heterogeneity).}
\item{sd.colmean}{Standard deviation of column means (receiver heterogeneity).}
\item{four.cycles}{Count of four-cycles in the bipartite network.}
}

If custom_gof is provided, additional statistics will be included with their
user-specified names.
}
\description{
Calculates goodness of fit statistics for relational data matrices,
evaluating second-order (dyadic) and third-order (triadic) dependence
patterns. Can handle both unipartite and bipartite networks.
}
\details{
The function computes network statistics that capture different aspects of
network structure beyond simple density. These statistics are particularly
useful for:
\itemize{
\item Model checking: comparing observed statistics to those from simulated networks
\item Model selection: choosing between models that better capture network dependencies
\item Descriptive analysis: summarizing key structural features of the network
}

For bipartite networks with square dimensions (nA = nB), you must explicitly
specify mode="bipartite" to ensure correct statistics are calculated.

Missing values in Y are handled by pairwise deletion for correlations and
are excluded from matrix products in triadic calculations.
}
\examples{

data(YX_nrm) 

# Auto-detect unipartite
gof_stats(YX_nrm$Y) 

# Explicitly specify mode for square bipartite
# Y_bip <- matrix(rnorm(100), 10, 10) # 10x10 bipartite
# gof_stats(Y_bip, mode = "bipartite")

# Custom GOF function
# my_stat <- function(Y) { c(my_measure = sum(Y > 0, na.rm=TRUE)) }
# gof_stats(YX_nrm$Y, custom_gof = my_stat)

}
\author{
Cassy Dorff, Shahryar Minhas, Tosin Salau
}
