% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.lame.R
\name{simulate.lame}
\alias{simulate.lame}
\title{Simulate longitudinal networks from a fitted LAME model}
\usage{
\method{simulate}{lame}(
  object,
  nsim = 100,
  seed = NULL,
  newdata = NULL,
  n_time = NULL,
  burn_in = 0,
  thin = 1,
  return_latent = FALSE,
  start_from = "posterior",
  ...
)
}
\arguments{
\item{object}{fitted model object of class "lame"}

\item{nsim}{number of network trajectories to simulate (default: 100)}

\item{seed}{random seed for reproducibility}

\item{newdata}{optional list containing new covariate data:
\describe{
\item{Xdyad}{list of T dyadic covariate arrays (n x n x p or nA x nB x p)}
\item{Xrow}{list of T row/sender covariate matrices (n x p or nA x p)}
\item{Xcol}{list of T column/receiver covariate matrices (n x p or nB x p)}
}
If NULL, uses covariates from original model fit}

\item{n_time}{number of time periods to simulate. If NULL, uses same as original data}

\item{burn_in}{number of initial MCMC samples to discard (default: 0)}

\item{thin}{thinning interval for MCMC samples (default: 1, use every sample)}

\item{return_latent}{logical: return latent Z matrices in addition to Y? (default: FALSE)}

\item{start_from}{character: how to initialize the simulation
\describe{
\item{"posterior"}{start from posterior mean (default)}
\item{"random"}{random initialization}
\item{"data"}{use first time point from original data}
}}

\item{...}{additional arguments (not currently used)}
}
\value{
A list with components:
\describe{
\item{Y}{list of nsim simulated longitudinal network trajectories,
each element is a list of T networks}
\item{Z}{if return_latent=TRUE, list of nsim latent Z trajectories}
\item{family}{the family of the model (binary, normal, etc.)}
\item{mode}{network mode (unipartite or bipartite)}
\item{n_time}{number of time periods}
}
}
\description{
Generates multiple longitudinal network realizations from the posterior
distribution of a fitted LAME (Longitudinal AME) model. This function performs
posterior predictive simulation for dynamic networks, propagating both
cross-sectional and temporal uncertainty through the simulated trajectories.
}
\details{
\strong{Mathematical Framework for Longitudinal Networks:}

The LAME model extends AME to multiple time periods T with potential
temporal dependencies. For each time t = 1, ..., T:
\deqn{Y_{ij,t} \sim F(Z_{ij,t})}
where the latent network evolves as:
\deqn{Z_{ij,t} = \beta^T x_{ij,t} + a_{i,t} + b_{j,t} + u_{i,t}^T v_{j,t} + \epsilon_{ij,t}}

\strong{Temporal Dynamics:}

LAME can incorporate three types of temporal dependencies:
\enumerate{
\item \strong{Static Effects:} Parameters constant over time
\itemize{
\item \eqn{a_{i,t} = a_i}, \eqn{b_{j,t} = b_j} for all t
\item \eqn{u_{i,t} = u_i}, \eqn{v_{j,t} = v_j} for all t
}
\item \strong{Dynamic Additive Effects:} AR(1) process for random effects
\deqn{a_{i,t} = \rho_{ab} a_{i,t-1} + \eta_{i,t}, \quad \eta_{i,t} \sim N(0, \sigma_a^2(1-\rho_{ab}^2))}
\deqn{b_{j,t} = \rho_{ab} b_{j,t-1} + \xi_{j,t}, \quad \xi_{j,t} \sim N(0, \sigma_b^2(1-\rho_{ab}^2))}
where \eqn{\rho_{ab}} is the temporal correlation parameter
\item \strong{Dynamic Multiplicative Effects:} AR(1) for latent factors
\deqn{u_{i,t} = \rho_{uv} u_{i,t-1} + \omega_{i,t}}
\deqn{v_{j,t} = \rho_{uv} v_{j,t-1} + \psi_{j,t}}
}

\strong{Uncertainty Quantification Process for Trajectories:}

For each simulated trajectory k = 1, ..., nsim:

\strong{Step 1: Parameter Sampling}
\itemize{
\item Draw MCMC iteration s uniformly from stored posterior samples
\item Extract static parameters: \eqn{\beta^{(s)}}, variance components
\item Extract temporal parameters if applicable: \eqn{\rho_{ab}^{(s)}}, \eqn{\rho_{uv}^{(s)}}
}

\strong{Step 2: Initialize at t = 1}

Depending on start_from parameter:
\itemize{
\item "posterior": Use posterior means as starting values
\item "random": Draw from stationary distribution
\item For additive effects: \eqn{a_{i,1}^{(k)} \sim N(0, \sigma_a^2)}
\item For multiplicative effects: Initialize from prior
}

\strong{Step 3: Evolve Through Time}

For each t = 2, ..., T:

a) \strong{Update Dynamic Effects} (if applicable):
\deqn{a_{i,t}^{(k)} = \rho_{ab}^{(s)} a_{i,t-1}^{(k)} + \eta_{i,t}^{(k)}}
where \eqn{\eta_{i,t}^{(k)} \sim N(0, \sigma_a^2(1-[\rho_{ab}^{(s)}]^2))}

The innovation variance \eqn{\sigma_a^2(1-\rho_{ab}^2)} ensures stationarity

b) \strong{Construct Latent Network}:
\deqn{E[Z_{ij,t}^{(k)}] = \beta^{(s)T} x_{ij,t} + a_{i,t}^{(k)} + b_{j,t}^{(k)} + u_{i,t}^T v_{j,t}}

c) \strong{Add Dyadic Noise}:
\deqn{Z_{ij,t}^{(k)} = E[Z_{ij,t}^{(k)}] + \epsilon_{ij,t}^{(k)}}
with correlation structure preserved from AME model

d) \strong{Generate Observations}:
Apply appropriate link function based on family

\strong{Sources of Uncertainty in Longitudinal Context:}
\enumerate{
\item \strong{Cross-sectional uncertainty} (as in AME):
\itemize{
\item Parameter uncertainty from MCMC
\item Random effect variability
\item Dyadic noise
}
\item \strong{Temporal uncertainty}:
\itemize{
\item Uncertainty in temporal correlation parameters \eqn{\rho_{ab}, \rho_{uv}}
\item Innovation noise in AR(1) processes
\item Propagation of uncertainty through time (compounds over periods)
}
\item \strong{Initial condition uncertainty}:
\itemize{
\item Different starting values lead to different trajectories
\item Captured through start_from options
}
}

\strong{Interpretation of Multiple Trajectories:}

Each simulated trajectory represents one possible evolution of the network
consistent with the posterior distribution. Variation across trajectories
captures:
\itemize{
\item Model parameter uncertainty
\item Stochastic variation in temporal evolution
\item Accumulated uncertainty over time periods
}

The ensemble of trajectories provides prediction intervals that widen over
time, reflecting increasing uncertainty in longer-term forecasts.

\strong{Special Considerations:}
\enumerate{
\item \strong{Temporal Correlation:} Higher \eqn{\rho} values create smoother
trajectories with more persistence
\item \strong{Stationarity:} The AR(1) innovation variance is scaled to maintain
stationary marginal distributions
\item \strong{Missing Time Points:} If simulating beyond observed data (n_time > T_observed),
covariates are recycled or set to zero with appropriate warnings
}

\strong{Limitations:}

As with simulate.ame, multiplicative effects currently use posterior means.
Full uncertainty would require storing complete MCMC chains for
\eqn{u_{i,t}, v_{j,t}} at all time points, which is memory-intensive for
large networks and long time series.
}
\examples{
\dontrun{
# Fit a longitudinal model
data(YX_bin_list)
fit <- lame(YX_bin_list$Y, YX_bin_list$X, burn=100, nscan=500, family="binary")

# Simulate 50 network trajectories from posterior
sims <- simulate(fit, nsim=50)

# Simulate longer time series
sims_long <- simulate(fit, nsim=25, n_time=20)

# With new covariates
new_X <- lapply(YX_bin_list$X, function(x) {
  array(rnorm(prod(dim(x))), dim=dim(x))
})
sims_new <- simulate(fit, nsim=50, newdata=list(Xdyad=new_X))
}

}
\author{
Shahryar Minhas
}
